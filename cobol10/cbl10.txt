       IDENTIFICATION DIVISION.

       PROGRAM-ID. CBL10.
       AUTHOR.  CHRIS GLOCK.
       DATE-WRITTEN. 11/21/06.
       DATE-COMPILED.
      ******************************************************************
      * PURPOSE:  THIS PROGRAM WILL READ RECORDS FROM A MEMBER THAT
      * CONTAINS A LIST OF PEOPLE IN YOUR COBOL CLASS AND WILL
      * WRITE EACH RECORD TO A NEW DATASET.
      ******************************************************************

       ENVIRONMENT DIVISION.

       INPUT-OUTPUT SECTION.

       FILE-CONTROL.

           SELECT EMP-REPORT
               ASSIGN TO SUMMARY.

       DATA DIVISION.


       FILE SECTION.

       FD  EMP-REPORT
           RECORD CONTAINS 132 CHARACTERS.

       01  PRINT-REC         PIC X(132).

       WORKING-STORAGE SECTION.
      ******************************************************************
      * THIS IS WHERE YOU DEFINE VARIABLES NEEDED THAT ARE NOT
      * PART OF THE ANY FILE DEFINITION. (REMOVE)
      ******************************************************************
           EXEC SQL
              INCLUDE EMP
           END-EXEC

           EXEC SQL
              INCLUDE SQLCA
           END-EXEC

           EXEC SQL
              DECLARE EMPCURS CURSOR FOR
                SELECT FIRSTNME, MIDINIT, LASTNAME,
                SUM( SALARY + BONUS + COMM ) AS GROSS
                  FROM SCM.EMP
                  WHERE SEX = 'M'
                GROUP BY JOB
                ORDER BY JOB, GROSS
           END-EXEC

       01  WORK-FIELDS.
           05 ARE-THERE-MORE-RECORDS  PIC XXX VALUE 'YES'.

           05 WS-PAGE-COUNT           PIC 99.
           05 WS-FIRST-LINE           PIC X(3) VALUE 'YES'.
           05 WS-LINES                PIC 9.
           05 WS-LINE-COUNT           PIC 99.
           05 WS-NAME                 PIC X(31).
           05 WS-EMP-COUNT            PIC 999.
           05 WS-TOTAL-EMP-COUNT      PIC 9(4).
           05 WS-SALARY               PIC S9(7)V99 COMP-3.
           05 WS-JOB-SALARY           PIC 9(8)V99.
           05 WS-GRAND-TOTAL          PIC 9(10)V99.
           05 WS-HI-NAME              PIC X(31).
           05 WS-HI-SALARY            PIC S9(7)V99 COMP-3.
           05 WS-JOB-TITLE            PIC X(8).
           05 WS-JOB-HOLD             PIC X(8).

           05 MORE-RECORDS            PIC X(3) VALUE 'YES'.
              88 NO-MORE-RECORDS               VALUE 'NO'.

           05 WS-DISPLAY-SQLCODE      PIC -999.

       01  CURRENT-DATE-AND-TIME.
           05 CD-YEAR                 PIC 9(4).
           05 CD-MONTH                PIC 99.
           05 CD-DAY                  PIC 99.

       01  MONTHS.
           05                         PIC X(9) VALUE 'JANUARY'.
           05                         PIC X(9) VALUE 'FEBRUARY'.
           05                         PIC X(9) VALUE 'MARCH'.
           05                         PIC X(9) VALUE 'APRIL'.
           05                         PIC X(9) VALUE 'MAY'.
           05                         PIC X(9) VALUE 'JUNE'.
           05                         PIC X(9) VALUE 'JULY'.
           05                         PIC X(9) VALUE 'AUGUST'.
           05                         PIC X(9) VALUE 'SEPTEMBER'.
           05                         PIC X(9) VALUE 'OCTOBER'.
           05                         PIC X(9) VALUE 'NOVEMBER'.
           05                         PIC X(9) VALUE 'DECEMBER'.

       01  MONTH-R REDEFINES MONTHS.
           05 MONTH-NAME OCCURS 12 TIMES PIC X(9).

       01  TSO-ID                     PIC X(7) VALUE 'XSCS119'.

       01  HEADING-LINE-1.
      *    05 HL1-MONTH               PIC X(9).
      *    05                         PIC XX VALUE SPACES.
           05 HL1-DAY                 PIC X(19).
      *    05                         PIC XX VALUE ', '.
      *    05 HL1-YEAR                PIC 9(4).
           05                         PIC X(11) VALUE SPACES.
           05                   PIC X(21) VALUE 'MURACH  &  ASSOCIATES'.
           05                         PIC X(18) VALUE SPACES.
           05                         PIC X(5) VALUE 'PAGE '.
           05 HL1-PAGE                PIC Z9.

       01  HEADING-LINE-2.
           05                         PIC X(29) VALUE SPACES.
           05                  PIC X(22) VALUE 'MALE  EMPLOYEE  REPORT'.

       01  HEADING-UNDER-LINE-1.
           05                         PIC X(29) VALUE SPACES.
           05                         PIC X(22) VALUE ALL '_'.

       01  HEADING-LINE-3.
           05                         PIC X(10) VALUE SPACES.
           05                         PIC X(3) VALUE 'JOB'.
           05                         PIC X(52) VALUE SPACES.
           05                         PIC X(5) VALUE 'GROSS'.

       01  HEADING-LINE-4.
           05                         PIC X(9) VALUE SPACES.
           05                         PIC X(5) VALUE 'TITLE'.
           05                         PIC X(11) VALUE SPACES.
           05                         PIC X(13) VALUE 'EMPLOYEE NAME'.
           05                         PIC X(26) VALUE SPACES.
           05                         PIC X(6) VALUE 'SALARY'.

       01  HEADING-UNDER-LINE-2.
           05                         PIC X(9) VALUE SPACES.
           05                         PIC X(5) VALUE ALL '_'.
           05                         PIC X(11) VALUE SPACES.
           05                         PIC X(13) VALUE ALL '_'.
           05                         PIC X(26) VALUE SPACES.
           05                         PIC X(6) VALUE ALL '_'.

       01  DETAIL-LINE.
           05                         PIC X(8) VALUE SPACES.
           05 DL-TITLE                PIC X(8).
           05                         PIC X(8) VALUE SPACES.
           05 DL-EMP-NAME             PIC X(31).
           05                         PIC X(5) VALUE SPACES.
           05 DL-GROSS-SALARY         PIC Z,ZZZ,ZZ9.99.

       01  CLASS-TOTAL-LINE.
           05                        PIC X(24) VALUE SPACES.
           05                        PIC X(16) VALUE '* *  TOTALS FOR '.
           05 CT-JOB-TITLE           PIC X(8).
           05                        PIC X(3) VALUE ' : '.
           05 CT-EMP-COUNT           PIC ZZ9.
           05                        PIC X(3) VALUE SPACES.
           05 CT-TOTAL-SALARY        PIC $$$,$$$,$$9.99.

       01  GRAND-TOTAL-LINE.
           05                        PIC X(23) VALUE SPACES.
           05                  PIC X(22) VALUE '* * * COMPANY TOTALS :'.
           05 GT-EMP-COUNT           PIC Z,ZZ9.
           05                        PIC XX VALUE SPACES.
           05 GT-TOTAL-SALARY        PIC $$$$,$$$,$$9.99.

       01  HIGH-LINE-1.
           05                        PIC X(11) VALUE '    * * *  '.
           05                        PIC X(13) VALUE 'HIGHEST PAID '.
           05                        PIC X(15) VALUE 'MALE EMPLOYEE: '.
           05 HI1-NAME               PIC X(31).

       01  HIGH-LINE-2.
           05                        PIC X(58) VALUE SPACES.
           05 HI2-SALARY             PIC $$,$$$,$$$,$$9.99.

       PROCEDURE DIVISION.
      *******************************************
      *  MAIN PROCESSING MODULE.
      *   - HOUSEKEEPING PERFORMED
      *   - PRETEST LOOP IS PERFORMED UNTIL ALL RECORDS ARE READ
      *     - FOR EACH RECORD READ, 110 PROCESS IS PERFORMED
      *   - END OF JOB PERFORMED
      *******************************************

       000-MAIN-MODULE.

           PERFORM 100-HOUSEKEEPING.

           PERFORM UNTIL NO-MORE-RECORDS
             MOVE SPACES TO FIRSTNME-TEXT
                            LASTNAME-TEXT

           EXEC SQL
             FETCH EMPCURS
             INTO :JOB, :FIRSTNME, :MIDINIT, :LASTNAME, :WS-SALARY
           END-EXEC

               IF SQLCODE = 10
                 MOVE 'NO ' TO ARE-THERE-MORE-RECORDS
               ELSE
                  IF SQLCODE = 0
                     PERFORM 110-PROCESS
                  ELSE
                     MOVE SQLCODE TO WS-DISPLAY-SQLCODE
                     DISPLAY '***************************'
                     DISPLAY ' 000-MAIN-MODULE'
                     DISPLAY ' ERROR READING EMPCURSOR'
                     DISPLAY ' SQL CODE IS ', WS-DISPLAY-SQLCODE
                     DISPLAY '***************************'
                  END-IF
               END-IF
      *      END-READ
           END-PERFORM.

           PERFORM 120-END-OF-JOB.

           STOP RUN.

      *******************************************
      *  HOUSEKEEPING MODULE.
      *  - FILES OPENED FOR PROCESSING
      *******************************************

       100-HOUSEKEEPING.

           EXEC SQL
              OPEN EMPCURS
           END-EXEC

           OPEN OUTPUT EMP-REPORT.

      *    EXEC SQL
      *       SELECT CURRENT DATE AS C_DATE,
      *              YEAR(CURRENT DATE) AS C_YEAR,
      *              MONTH(CURRENT DATE) AS C_MONTH,
      *              DAY(CURENT DATE) AS C_DAY)
      *       INTO :C_DATE, :C_YEAR, :C_MONTH, :C_DAY
      *       FROM SCM.EMP
      *    END-EXEC
           MOVE FUNCTION CURRENT-DATE TO CURRENT-DATE-AND-TIME
           STRING MONTH-NAME(CD-MONTH) DELIMITED BY ' '
           '  ' DELIMITED BY SIZE
           CD-DAY DELIMITED BY ' '
           ', ' DELIMITED BY SIZE
           CD-YEAR DELIMITED BY '  '
           INTO HL1-DAY.

      *******************************************
      *  DETAIL PROCESS MODULE.
      *  - AN EXPLAINATION OF THE PROCESSING FOR EACH
      *    RECORD BELONGS HERE
      *******************************************

       110-PROCESS.

           IF WS-LINE-COUNT > 40
              PERFORM 210-HEADINGS
           END-IF

           IF WS-FIRST-LINE = 'YES'
              MOVE 'NO ' TO WS-FIRST-LINE
              MOVE JOB TO WS-JOB-HOLD
                          WS-JOB-TITLE

           ELSE
              MOVE SPACES TO DL-TITLE
           END-IF

           IF JOB NOT = WS-JOB-HOLD
              PERFORM 200-JOB-BREAK
           END-IF

           MOVE SPACES TO WS-NAME
           STRING FIRSTNME DELIMITED BY '  '
           ' ' DELIMITED BY SIZE
           MIDINIT DELIMITED BY ' '
           '.' DELIMITED BY SIZE
           LASTNAME DELIMITED '  '
           INTO WS-NAME
           MOVE WS-NAME TO DL-EMP-NAME
           MOVE WS-SALARY TO DL-GROSS-SALARY
           MOVE DETAIL-LINE TO PRINT-REC
           WRITE PRINT-REC
             AFTER WS-LINES
           ADD WS-LINES TO WS-LINE-COUNT.
      *    ADD 1 TO EMP-COUNT.
      *******************************************
      *  END OF JOB MODULE.
      *  - FILES CLOSED
      *******************************************

       120-END-OF-JOB.
           PERFORM 200-JOB-BREAK
           MOVE WS-TOTAL-EMP-COUNT TO GT-EMP-COUNT

      *    EXEC SQL
      *    SELECT SUM(SALARY + BONUS + COMM)
      *       INTO :WS-GRAND-TOTAL
      *       FROM SCM.EMP
      *       WHERE SEX = 'M'
      *    END-EXEC


           MOVE WS-GRAND-TOTAL TO GT-TOTAL-SALARY
           MOVE GRAND-TOTAL-LINE TO PRINT-REC
           WRITE PRINT-REC
             AFTER 2
           EXEC SQL
             SELECT MAX(SALARY + BONUS + COMM)
               INTO :WS-HI-SALARY
             FROM SCM.EMP
             WHERE SEX = 'M'
           END-EXEC
           EXEC SQL
             SELECT FIRSTNME, MIDINIT, LASTNAME
               INTO :FIRSTNME, :MIDINIT, :LASTNAME
             FROM SCM.EMP
             WHERE (SALARY + BONUS + COMM) = :WS-HI-SALARY
           END-EXEC

           STRING





           INTO WS-HI-NAME
           MOVE WS-HI-NAME TO HI1-NAME
           MOVE HIGH-LINE-1 TO PRINT-REC
           WRITE PRINT-REC
             AFTER 4
           MOVE WS-HI-SALARY TO HI2-SALARY
           MOVE HIGH-LINE-2 TO PRINT-REC
           WRITE PRINT-REC
      *    DISPLAY ' NUMBER OF RECORDS PROCESSED = ' WS-REC-COUNT
           EXEC SQL
              CLOSE EMPCURS
           END-EXEC.

       200-JOB-BREAK.
           MOVE 3 TO WS-LINES
      *    EXEC SQL
      *       SELECT SUM(SALARY + BONUS + COMM)
      *       INTO :WS-JOB-SALARY
      *       FROM SCM.EMP
      *       WHERE JOB = :JOB AND SEX = 'M'
      *       GROUP BY JOB
      *       ORDER BY JOB
      *    END-EXEC
           MOVE WS-EMP-COUNT TO CT-EMP-COUNT
           MOVE WS-JOB-TITLE TO CT-JOB-TITLE
           MOVE WS-JOB-SALARY TO CT-TOTAL-SALARY
           MOVE CLASS-TOTAL-LINE TO PRINT-REC
           WRITE PRINT-REC
             AFTER WS-LINES
           ADD WS-EMP-COUNT TO WS-TOTAL-EMP-COUNT
           MOVE 0 TO WS-EMP-COUNT
           ADD WS-LINES TO WS-LINE-COUNT
           MOVE 2 TO WS-LINES
           MOVE JOB TO WS-JOB-HOLD
                       WS-JOB-TITLE.

       210-HEADINGS.
           MOVE TSO-ID TO PRINT-REC
           WRITE PRINT-REC
             AFTER PAGE

           ADD 1 TO WS-PAGE-COUNT

           MOVE WS-PAGE-COUNT TO HL1-PAGE
           MOVE HEADING-LINE-1 TO PRINT-REC
           WRITE PRINT-REC
             AFTER 3

           MOVE HEADING-LINE-2 TO PRINT-REC
           WRITE PRINT-REC
             AFTER 2

           MOVE HEADING-UNDER-LINE-1 TO PRINT-REC
           WRITE PRINT-REC
             AFTER 0

           MOVE HEADING-LINE-3 TO PRINT-REC
           WRITE PRINT-REC
             AFTER 4

           MOVE HEADING-LINE-4 TO PRINT-REC
           WRITE PRINT-REC

           MOVE HEADING-UNDER-LINE-2 TO PRINT-REC
           WRITE PRINT-REC
             AFTER 0

           MOVE 2 TO WS-LINES
           MOVE 0 TO WS-LINE-COUNT
           MOVE WS-JOB-HOLD TO WS-JOB-TITLE.
